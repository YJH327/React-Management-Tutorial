[{"C:\\React Project Tutorial\\management\\client\\src\\index.js":"1","C:\\React Project Tutorial\\management\\client\\src\\App.js":"2","C:\\React Project Tutorial\\management\\client\\src\\reportWebVitals.js":"3","C:\\React Project Tutorial\\management\\client\\src\\components\\Customer.js":"4"},{"size":500,"mtime":1610091538975,"results":"5","hashOfConfig":"6"},{"size":2201,"mtime":1610279764707,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":686,"mtime":1610105700996,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"cy9osv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\React Project Tutorial\\management\\client\\src\\index.js",[],["21","22"],"C:\\React Project Tutorial\\management\\client\\src\\App.js",["23"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Customer from './components/Customer'\nimport Paper from \"@material-ui/core/Paper\"\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 1080,\n  },\n});\n\nfunction response() {\n  return fetch('/api/customer')\n    .then(data => data.json())\n}\n\nfunction App() {\n  const [customers, setList] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n    response()\n      .then(items => {\n        if(mounted) {\n          setList(items)\n        }\n      })\n    return () => mounted = false;\n  })\n\n  const classes = useStyles();\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>번호</StyledTableCell>\n            <StyledTableCell>이미지</StyledTableCell>\n            <StyledTableCell>이름</StyledTableCell>\n            <StyledTableCell>생년월일</StyledTableCell>\n            <StyledTableCell>성별</StyledTableCell>\n            <StyledTableCell>직업</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          { customers ? customers.map(c => {\n            return ( <Customer key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />)\n          }) : \"\"}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default App;\n","C:\\React Project Tutorial\\management\\client\\src\\reportWebVitals.js",[],"C:\\React Project Tutorial\\management\\client\\src\\components\\Customer.js",[],["24","25"],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":23,"column":7,"nodeType":"32","messageId":"33","endLine":23,"endColumn":21},{"ruleId":"26","replacedBy":"34"},{"ruleId":"28","replacedBy":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'StyledTableRow' is assigned a value but never used.","Identifier","unusedVar",["36"],["37"],"no-global-assign","no-unsafe-negation"]